stages:
    - build
    - test
    - deploy

variables:
    RULES_CHANGES_PATH: "**/*"

.base-rules:
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          when: always
        - if: '$CI_PIPELINE_SOURCE == "push"'
          when: never
        - if: $CI_COMMIT_TAG
          when: never
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          changes:
              - $RULES_CHANGES_PATH
        - when: manual
          allow_failure: true

.backend:
    extends: .base-rules
    variables:
        RULES_CHANGES_PATH: "backend/**/*"

.frontend:
    extends: .base-rules
    variables:
        RULES_CHANGES_PATH: "frontend/**/*"

.go-cache:
    extends: .backend
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    before_script:
        - mkdir -p .go
    cache:
        paths:
            - .go/pkg/mod/

backend-test:
    image: golang:1.17-buster
    stage: test
    extends: .go-cache
    needs: []
    script:
        - cd backend
        - go mod download
        - go mod verify
        - go test -v ./...

frontend-test:
    image: node:14-alpine
    stage: test
    extends: .frontend
    needs: []
    cache:
        - key:
            files:
                - yarn.lock
        paths:
            - .yarn-cache/
    script:
        - cd frontend
        - yarn install --cache-folder .yarn-cache
        - yarn test:unit
# backend-build:
#     image: docker:latest
#     stage: build
#     extends: .backend
#     needs: [""]
#     script:
#         - echo "Compiling the backend code..."

# frontend-build:
#     stage: build
#     extends: .frontend
#     needs: []
#     script:
#         - echo "Compiling the frontend code..."

# backend-deploy:
#     stage: deploy
#     extends: .backend
#     needs: ["backend-test"]
#     script:
#         - echo "Deploying the backend code..."

# frontend-deploy:
#     stage: deploy
#     extends: .frontend
#     needs: ["frontend-test"]
#     script:
#         - echo "Deploying the frontend code..."
