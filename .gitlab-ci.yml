stages:
    - test
    - build
    - e2e-test

variables:
    RULES_CHANGES_PATH: "**/*"
    BACKEND_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME-backend:latest
    FRONTEND_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME-frontend:latest
    CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - .cache/*
        - cache/Cypress
        - frontend/node_modules

.go-cache:
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    before_script:
        - mkdir -p .go
    cache:
        paths:
            - .go/pkg/mod/

backend-test:
    image: golang:1.17-buster
    stage: test
    extends: .go-cache
    script:
        - cd backend
        - go mod download
        - go mod verify
        - go test -v ./...

frontend-test:
    image: cypress/browsers:node14.17.0-chrome88-ff89
    stage: test
    script:
        - cd frontend
        - yarn install --frozen-lockfile
        - npx cypress cache path
        - npx cypress cache list
        - yarn test:unit

backend-build:
    image: docker:latest
    stage: build
    needs: ["backend-test"]
    services:
        - docker:dind
    before_script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker pull $BACKEND_LATEST
    script:
        - docker build --cache-from $BACKEND_LATEST --tag $BACKEND_LATEST --target prod ./backend
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker push $BACKEND_LATEST

frontend-build:
    image: docker:latest
    stage: build
    needs: ["frontend-test"]
    services:
        - docker:dind
    # before_script:
    #     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    #     - docker pull $FRONTEND_LATEST
    script:
        - echo "frontend building"
        # - docker build --tag $FRONTEND_LATEST --target prod ./frontend
        # - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        # - docker push $FRONTEND_LATEST

e2e-test:
    image: cypress/browsers:node14.17.0-chrome88-ff89
    services:
        - name: ${BACKEND_LATEST}
          alias: backend
    variables:
        LISTEN_ADDR: "0.0.0.0:8081"
        HOST: "0.0.0.0"
        PORT: "3001"
        PROXY_URL: "http://backend"
    stage: e2e-test
    needs: ["backend-build", "frontend-build"]
    script:
        - cd frontend
        - yarn build
        - yarn test:e2e
